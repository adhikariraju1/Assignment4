d <- transform(d, wealth=as.numeric(as.character(wealth)))
m1 <- lm(eusupp ~ sex + wealth + age, d)
summary(lm1)
summary(m1)
m2 <- lm(eusupp ~ sex + wealth + educ + age, d)
summary(m2)
m3 <- lm(eusupp ~ sex + left_right + wealth + educ + age, d)
summary(m3)
m7 <- lm(eusupp ~ sex + left_right + wealth + educ + age + I(eusupp^2) + I(eusupp^3), d))
m7 <- lm(eusupp ~ sex + left_right + wealth + educ + age + I(eusupp^2) + I(eusupp^3), d))
m3 <- lm(eusupp ~ sex + left_right + wealth + educ + age, d)
m7 <- lm(eusupp ~ sex + left_right + wealth + educ + age + I(eusupp^2) + I(eusupp^3), d))
m7 <- lm(eusupp ~ sex + left_right + wealth + educ + age + I(left_right^2), d)
summary(m7)
m8 <- lm(eusupp ~ sex + left_right + wealth + educ + age + I(eusupp^2) + I(eusupp^3), d)
summary(m8)
stargazer (m2, float = F, header = F, dep.var.caption = 'EU Support', covariate.labels = c('Wealth', 'Education', NA))
library(stargazer)
stargazer (m2, float = F, header = F, dep.var.caption = 'EU Support', covariate.labels = c('Wealth', 'Education', NA))
summary(m2)
2 + 2
2 + 2
number <- 10
number
words <- "Hello World"
words
divided <- 2 / 3
divided
abscent <- NA
is.na(abscent)
class(number)
class(abscent)
class(words)
numeric_vector <- c(1, 2, 3)
combined <- cbind(numeric_vector, character_vector)
character_vector <- c("Albania", "Botswana", "Cambodia")
combined <- cbind(numeric_vector, character_vector)
combined
new_df z- data.frame(numeric_vector, character_vector)
new_df <- data.frame(numeric_vector, character_vector)
view(new_df)
View(new_df)
new_df$character_vector
install.packages(c("foreign", "lattice", "Matrix", "mgcv", "survival"))
install.packages("dplyr")
data(swiss)
names(swiss)
head(swiss[1:3, 1:4])
numbers <- c(1, 2, 1)
names <- c('Mario', 'Alonso')
factors <- factor(numbers, labels = names)
summary(factors)
numbers <- c(1, 2, 1)
names <- c('dogs', 'cats')
factors <- factor(numbers, labels = names)
summary(factors)
numbers <- c(1, 2, 2)
names <- c('dogs', 'cats', 'birds')
factors <- factor(numbers, labels = names)
summary(factors)
numbers <- c(1, 2, 3)
names <- c('dogs', 'cats', 'birds')
factors <- factor(numbers, labels = names)
summary(factors)
combined_df <- data.frame(numbers, names, stringAsFactors = False)
combined_df <- data.frame(numbers, names, stringAsFactors = F)
combined_df
combined_df <- data.frame(numbers, names, stringsAsFactors = F)
combined_df
factor_names <- c('loyal', 'funny', 'fly')
factors <- factor(numbers, labels = factor_names)
summary(factors)
combined_df <- data.frame(numbers, names, factors, stringsAsFactors = F)
combined_df
logics <- c('TRUE', 'FALSE', 'FALSE')
combined_df <- data.frame(numbers, names, factors, logics, stringsAsFactors = F)
combined_df
library(datasets)
View(Titanic)
View(LakeHuron)
summary(AirPassengers)
View(AirPassengers)
View(discoveries)
View(HairEyeColor)
View(UCBAdmissions)
###Create a number variable
numbers <- c(1, 2, 3)
###Create a character variable
names <- c('dogs', 'cats', 'birds')
###Create a factor variable
factor_names <- c('loyal', 'funny', 'fly')
factors <- factor(numbers, labels = factor_names)
summary(factors)
###Create a logical variable
logics <- c(TRUE, FALSE, FALSE)
###Merge all the vectors into one dataset
combined_df <- data.frame(numbers, names, factors, logics, stringsAsFactors = F)
combined_df
View(d)
###Create a number variable
numbers <- c(1, 2, 3)
###Create a character variable
names <- c('dogs', 'cats', 'birds')
###Create a factor variable
factor_names <- c('loyal', 'funny', 'flying')
factors <- factor(numbers, labels = factor_names)
summary(factors)
###Create a logical variable
logics <- c(TRUE, FALSE, FALSE)
###Merge all the vectors into one dataset
combined_df <- data.frame(numbers, names, factors, logics, stringsAsFactors = F)
combined_df
View(USArrests)
library(ROAuth)
library(twitteR)
library(streamR)
library(stringr)
library(RCurl)
library(maps)
library(devtools)
library(tm)
library(Rfacebook)
library(base64enc)
library(ROAuth)
library(SnowballC)
library(igraph)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "1YbhyroEaYAuzPoKey7iCLBBL"
consumerSecret <- "EBc0proP8Jh1aRxIES9QyGwS2CIMAu5Jc3zrDLQDKIz5y3DM5B"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret, requestURL=requestURL,
accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessToken = '735118568120025088-E1MS3g3tyWG6Qba4ltcZ94mJZFQXwoz'
accessSecret = 'BcB6QTmtkIrQhoPhWBjWeLmpxt1KTV5gKfX4c1AumxZS4'
library(twitteR)
setup_twitter_oauth(consumer_key=consumerKey, consumer_secret=consumerSecret,
access_token=accessToken, access_secret=accessSecret)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "1YbhyroEaYAuzPoKey7iCLBBL"
consumerSecret <- "EBc0proP8Jh1aRxIES9QyGwS2CIMAu5Jc3zrDLQDKIz5y3DM5B"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret, requestURL=requestURL,
accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessToken = '735118568120025088-E1MS3g3tyWG6Qba4ltcZ94mJZFQXwoz'
accessSecret = 'BcB6QTmtkIrQhoPhWBjWeLmpxt1KTV5gKfX4c1AumxZS4'
library(twitteR)
setup_twitter_oauth(consumer_key=consumerKey, consumer_secret=consumerSecret,
access_token=accessToken, access_secret=accessSecret)
library(streamR)
filterStream(file.name = 'brexitNov.json', track = 'brexit',
timeout = 400, oauth = my_oauth)
brexitTweets2 <- parseTweets('brexitNov.json')
table(brexitTweets2$lang)
languageTable <- table(brexitTweets2$lang)
languageDF <- as.data.frame(languageTable, stringAsFactors = F)
View(languageDF)
View(languageDF)
order(languageDF$Freq, decreasing = T)
View(languageDF)
View(languageDF)
order(languageDF$Freq, decreasing = T)
order(languageDF$Freq, decreasing = T)
languageDF <- languageDF[order(languageDF$Freq, decreasing = T), ]
languageDF
language_top_df <. languageDF[1:10,]
language_top_df <- languageDF[1:10,]
language_top_df <- languageDF[1:10,]
language_top_df
library(ggplot2)
ggplot() + geom_bar(data=language_top_df , aes(x = reorder(Var1, Freq), y= Freq), stat="identity") +
theme_bw()+xlab(NULL) +
theme(axis.text.x=element_text(angle=90,size=14))
table(brexitTweets2$source)
sum(!is.na(brexitTweets2$lat))
table(brexitTweets2$country)
summary(brexitTweets2$retweet_count)
brexitTweets2$text[which.max(brexitTweets2$retweet_count)]
lenght(unique(brexitTweets2$screen_name))
length(unique(brexitTweets2$screen_name))
unique(brexitTweets2$screen_name)
uniqueUsers <- unique(brexitTweets2$screen_name)
write.csv(uniqueUsers, file = 'uniqueUsersbrexit.csv')
uniqueUsers
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
uniqueUsersbrexit.csv
uniqueUsers <- unique(brexitTweets2$screen_name)
uniqueUsers
uniqueUsers <- as.data.frame(languageTable, stringAsFactors = F)
uniqueUsers
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
uniqueUsers <- unique(brexitTweets2$screen_name)
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
order(uniqueUsers$Freq, decreasing = T)
order(uniqueUsers$Freq, decreasing = T)
write.csv(uniqueUsers, file = 'uniqueUsersbrexit.csv')
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
table(brexitTweets2$unique_users)
brexitTweets2
View(brexitTweets2)
table(brexitTweets2$screen_name)
userTable <- table(brexitTweets2$screen_name)
table(brexitTweets2$screen_name)
userTable <- table(brexitTweets2$screen_name)
userDF <- as.data.frame(userTable, stringAsFactors = F)
order(userDF$Freq, decreasing = T)
userDF <- userDF[order(languageDF$Freq, decreasing = T), ]
table(brexitTweets2$screen_name)
userTable <- table(brexitTweets2$screen_name)
userDF <- as.data.frame(userTable, stringAsFactors = F)
order(userDF$Freq, decreasing = T)
userDF <- userDF[order(userDF$Freq, decreasing = T), ]
userDF
userDF
userDF
user_top_df <- userDF[1:20,]
user_top_df
ggplot() + geom_bar(data=language_top_df , aes(x = reorder(Var1, Freq), y= Freq), stat="identity") +
theme_bw()+xlab(NULL) +
theme(axis.text.x=element_text(angle=90,size=14))
ggplot() + geom_bar(data=user_top_df, aes(x = reorder(Var1, Freq), y= Freq), stat="identity") +
theme_bw()+xlab(NULL) +
theme(axis.text.x=element_text(angle=90,size=14))
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
library(WDI)
library(countrycode)
library(rio)
library(stargazer)
library(ggplot2)
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
View(GINI)
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
View(GINI)
library(WDI)
library(countrycode)
library(rio)
library(stargazer)
library(ggplot2)
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
CO2 <- import('http://edgar.jrc.ec.europa.eu/news_docs/CO2_per_capita_1970-2014_dataset_of_CO2_report_2015.xls')
CO2 <- CO2[-c(1:13), ]
names(CO2)[42] <- "CO2010"
names(CO2)[names(CO2)=="Global per capita CO2 emissions from fossil fuel use and cement production 1970-2014"] <- "country"
CO2$iso2c <- countrycode(CO2$country, 'country.name', 'iso2c', warn = TRUE)
CO2 <- CO2[, c('iso2c', 'CO2010')]
View(GINI)
names(GINI)[names(GINI)=="SI.POV.GINI"] <- "GiniCoeff"
names(GINI)[names(GINI)=="NY.GDP.PCAP.CD"] <- "GDPperCapita"
GINI$iso2c <- as.character(GINI$iso2c)
GINI <- GINI[, c('iso2c', 'country', 'GiniCoeff', 'GDPperCapita', 'Income')]
GINI <- GINI[, c('iso2c', 'country', 'GiniCoeff', 'GDPperCapita', 'income')]
Combined <- merge(GINI, CO2, by = c('iso2c'))
View(Combined)
Combined <- Combined[complete.cases(Combined),]
stargazer(Combined, type = 'text')
ggplot(data = Combined, aes(x = CO2010,
y = GiniCoeff)) + geom_point(aes(colour = income)) + theme_bw()
m1 <- lm(CO2010 ~ GiniCoeff, Combined)
m2 <- lm(CO2010 ~ GiniCoeff + GDPperCapita, Combined)
stargazer(m1, m2, type = 'text')
library(ROAuth)
library(twitteR)
library(streamR)
library(stringr)
library(RCurl)
library(maps)
library(devtools)
library(ggplot2)
library(tm)
library(SnowballC)
library(igraph)
library(Rfacebook)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "1YbhyroEaYAuzPoKey7iCLBBL"
consumerSecret <- "EBc0proP8Jh1aRxIES9QyGwS2CIMAu5Jc3zrDLQDKIz5y3DM5B"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret, requestURL=requestURL,
accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessToken = '735118568120025088-E1MS3g3tyWG6Qba4ltcZ94mJZFQXwoz'
accessSecret = 'BcB6QTmtkIrQhoPhWBjWeLmpxt1KTV5gKfX4c1AumxZS4'
library(twitteR)
setup_twitter_oauth(consumer_key=consumerKey, consumer_secret=consumerSecret,
access_token=accessToken, access_secret=accessSecret)
FamilyTweets <- searchTwitter('todossomosfamilia', n=300)
FamilyTweets <- twListToDF(FamilyTweets)
write.csv(FamilyTweets, "FamilyTweetsDEMO.csv")
FamilyTweets$created
filterStream(file.name="familia.json", track="todossomosfamilia",
timeout=100, oauth=my_oauth)
View(FamilyTweets)
FamilyTweets2 <- parseTweets("familia.json")
filterStream(file.name="familia.json", track="todossomosfamilia",
timeout=300, oauth=my_oauth)
FamilyTweets <- searchTwitter('todossomosfamilia', n=3000)
filterStream(file.name='familia2.json', track = 'todossomosfamilia', 'defendemoslafamilia'
timeout = 0, oauth=my_oauth)
filterStream(file.name='familia2.json', track = c('todossomosfamilia', 'defendemoslafamilia'),
timeout=36000, oauth=my_oauth)
FamilyTweets10hrs <- parseTweets("familia2.json")
FamilyTweets10hrs
View(FamilyTweets10hrs)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia',) n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia',) n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia' 'defendemoslafamilia') n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia'), n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia',), n=30000)
FamilyTweets30k <- searchTwitter('todossomosfamilia', n=30000)
FamilyTweets30k
AntiFamilyTweets30k <- searchTwitter('defendemoslafamilia', n=30000)
AntiFamilyTweets30k
View(AntiFamilyTweets30k)
AntiFamilyTweets30k <- twListToDF(AntiFamilyTweets30k)
View(AntiFamilyTweets30k)
plot_ly(Combined2012, x = ~EPI.2012, y = ~GINI,
mode = 'markers')
library(WDI)
library(countrycode)
library(rio)
library(stargazer)
library(ggplot2)
library(tidyr)
library(plotly)
library(xlsx)
library(WDI)
library(countrycode)
library(rio)
library(stargazer)
library(ggplot2)
library(tidyr)
library(plotly)
library(xlsx)
EPI2012 <- read.xlsx("2014epi_backcasted_scores.xls", 3)
EPI2011 <- read.xlsx("2014epi_backcasted_scores.xls", 4)
EPI2010 <- read.xlsx("2014epi_backcasted_scores.xls", 5)
EPI2009 <- read.xlsx("2014epi_backcasted_scores.xls", 6)
EPI2008 <- read.xlsx("2014epi_backcasted_scores.xls", 7)
EPI2007 <- read.xlsx("2014epi_backcasted_scores.xls", 8)
EPI2006 <- read.xlsx("2014epi_backcasted_scores.xls", 9)
EPI2005 <- read.xlsx("2014epi_backcasted_scores.xls", 10)
EPI2004 <- read.xlsx("2014epi_backcasted_scores.xls", 11)
EPI2003 <- read.xlsx("2014epi_backcasted_scores.xls", 12)
EPI2002 <- read.xlsx("2014epi_backcasted_scores.xls", 13)
setwd('/Users/mariorodriguez/Desktop/Assignment4')
GINI <- WDI(country = 'all', start = '2002', end = '2012', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.PP.CD', 'EN.ATM.CO2E.PC'), extra = TRUE)
EPI2012 <- read.xlsx("2014epi_backcasted_scores.xls", 3)
EPI2011 <- read.xlsx("2014epi_backcasted_scores.xls", 4)
EPI2010 <- read.xlsx("2014epi_backcasted_scores.xls", 5)
EPI2009 <- read.xlsx("2014epi_backcasted_scores.xls", 6)
EPI2008 <- read.xlsx("2014epi_backcasted_scores.xls", 7)
EPI2007 <- read.xlsx("2014epi_backcasted_scores.xls", 8)
EPI2006 <- read.xlsx("2014epi_backcasted_scores.xls", 9)
EPI2005 <- read.xlsx("2014epi_backcasted_scores.xls", 10)
EPI2004 <- read.xlsx("2014epi_backcasted_scores.xls", 11)
EPI2003 <- read.xlsx("2014epi_backcasted_scores.xls", 12)
EPI2002 <- read.xlsx("2014epi_backcasted_scores.xls", 13)
EPI2012 <- EPI2012[, c('iso', 'EPI.2012')]
EPI2011 <- EPI2011[, c('iso', 'EPI.2011')]
EPI2010 <- EPI2010[, c('iso', 'EPI.2010')]
EPI2009 <- EPI2009[, c('iso', 'EPI.2009')]
EPI2008 <- EPI2008[, c('iso', 'EPI.2008')]
EPI2007 <- EPI2007[, c('iso', 'EPI.2007')]
EPI2006 <- EPI2006[, c('iso', 'EPI.2006')]
EPI2005 <- EPI2005[, c('iso', 'EPI.2005')]
EPI2004 <- EPI2004[, c('iso', 'EPI.2004')]
EPI2003 <- EPI2003[, c('iso', 'EPI.2003')]
EPI2002 <- EPI2002[, c('iso', 'EPI.2002')]
EPI <- merge(EPI2002, EPI2003, by = c('iso'))
EPI <- merge(EPI, EPI2004, by = c('iso'))
EPI <- merge(EPI, EPI2005, by = c('iso'))
EPI <- merge(EPI, EPI2006, by = c('iso'))
EPI <- merge(EPI, EPI2007, by = c('iso'))
EPI <- merge(EPI, EPI2008, by = c('iso'))
EPI <- merge(EPI, EPI2009, by = c('iso'))
EPI <- merge(EPI, EPI2010, by = c('iso'))
EPI <- merge(EPI, EPI2011, by = c('iso'))
EPI <- merge(EPI, EPI2012, by = c('iso'))
names(EPI)[names(EPI)=="EPI.2002"] <- "2002"
names(EPI)[names(EPI)=="EPI.2003"] <- "2003"
names(EPI)[names(EPI)=="EPI.2004"] <- "2004"
names(EPI)[names(EPI)=="EPI.2005"] <- "2005"
names(EPI)[names(EPI)=="EPI.2006"] <- "2006"
names(EPI)[names(EPI)=="EPI.2007"] <- "2007"
names(EPI)[names(EPI)=="EPI.2008"] <- "2008"
names(EPI)[names(EPI)=="EPI.2009"] <- "2009"
names(EPI)[names(EPI)=="EPI.2010"] <- "2010"
names(EPI)[names(EPI)=="EPI.2011"] <- "2011"
names(EPI)[names(EPI)=="EPI.2012"] <- "2012"
EPITest <- gather(EPI, year, EPIValue, 2:12)
names(EPITest)[names(EPITest)=="iso"] <- "iso3c"
Combined <- merge(GINI, EPITest, by = c('iso3c', 'year'))
names(Combined)[names(Combined)=="SI.POV.GINI"] <- "GiniCoeff"
names(Combined)[names(Combined)=="NY.GDP.PCAP.PP.CD"] <- "GDPperCapPPP"
names(Combined)[names(Combined)=="EN.ATM.CO2E.PC"] <- "CO2emissions"
Combined$EPIValue <- as.numeric(as.character(Combined$EPIValue))
GINI2012 <- WDI(country = 'all', start = '2012', end = '2012', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.PP.CD', 'EN.ATM.CO2E.PC'), extra = TRUE)
names(EPI2012)[names(EPI2012)=="iso"] <- "iso3c"
names(GINI2012)[names(GINI2012)=="SI.POV.GINI"] <- "GINI"
names(GINI2012)[names(GINI2012)=="NY.GDP.PCAP.PP.CD"] <- "GDPPerCapPPP"
names(GINI2012)[names(GINI2012)=="EN.ATM.CO2E.PC"] <- "CO2EmPerCap"
Combined2012 <- merge(GINI2012, EPI2012, by = c('iso3c'))
Combined2012 <- Combined2012[complete.cases(Combined2012),]
Combined2012$EPI.2012 <- as.numeric(as.character(Combined2012$EPI.2012))
plottest <- ggplot(data = Combined2012, aes(x = EPI.2012,
y = GINI)) + geom_point()
ggplotly(plottest)
plottest <- ggplot(data = Combined2012, aes(x = GINI,
y = EPI.2012)) + geom_point()
ggplotly(plottest)
setwd('/Users/mariorodriguez/Desktop/Assignment4')
View(Combined2012)
m1 <- lm(EPI.2012 ~ GINI, Combined2012)
summary(m1)
m2 <- lm(EPI.2012 ~ GINI + GDPPerCapPPP, Combined2012)
summary(m2)
write.csv(Combined, file = EPIGINI)
write.csv(Combined, file = "EPIGINI")
write.csv(Combined2012, file = "EPIGINI2012")
mydata <- read.csv("EPIGINI.csv")
write.csv(Combined, file = "EPIGINI.csv")
write.csv(Combined2012, file = "EPIGINI2012.csv")
mydata <- read.csv("EPIGINI.csv")
View(mydata)
sapply(mydata, class)
install.packages("repmis", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
Y
y
possible_dir <- c('C:/RajuPC/CollaborativeSSDA/Assignments/Assignment4', '/Users/mariorodriguez/Desktop/Assignment4')
repmis::set_valid_wd(possible_dir)
Combined2012 <- read.csv('EPIGINI2012.csv')
plottest <- ggplot(data = Combined2012, aes(x = GINI,
y = EPI.2012)) + geom_point()
ggplotly(plottest)
plot_ly(Combined2012, x = ~GINI, y = ~EPI.2012,
mode = 'markers')
m1 <- lm(EPI.2012 ~ GINI, Combined2012)
summary(m1)
m2 <- lm(EPI.2012 ~ GINI + GDPPerCapPPP, Combined2012)
summary(m2)
#Pooled OLS on the dataset combined.
m3 <- lm(EPIValue ~ GiniCoeff + GDPperCapPPP, combined)
summary(m3)
m3 <- lm(EPIValue ~ GiniCoeff + GDPperCapPPP, Combined)
summary(m3)
#Fixed Effects on the same dataset.
m4 <- plm(EPIValue ~ GiniCoeff + GDPperCapPPP, data=combined, index= c('country', 'year'), model = 'within')
library(plm)
install.packages("plm", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
m4 <- plm(EPIValue ~ GiniCoeff + GDPperCapPPP, data=combined, index= c('country', 'year'), model = 'within')
m4 <- plm(EPIValue ~ GiniCoeff + GDPperCapPPP, data=combined, index= c('country', 'year'), model = 'within')
library(plm)
m4 <- plm(EPIValue ~ GiniCoeff + GDPperCapPPP, data=combined, index= c('country', 'year'), model = 'within')
m4 <- plm(EPIValue ~ GiniCoeff + GDPperCapPPP, data=Combined, index= c('country', 'year'), model = 'within')
summary(m4)
#Random Effects now.
m5 <- plm(EPIValue ~ GiniCoeff + GDPperCapPPP, data=combined, index= c('country', 'year'), model = 'random')
m5 <- plm(EPIValue ~ GiniCoeff + GDPperCapPPP, data=Combined, index= c('country', 'year'), model = 'random')
summary(m5)
#Check between fixed effects or random effects.
phtest(m4, m5)
install.packages("googleVis", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
View(Combined2012)
co2_map <- gvisGeoChart(Combined2012, locationvar = 'iso2c',
colorvar = 'GINI',
options = list(
colors = "['#fff7bc', '#d95f0e']"
))
library(googleVis)
co2_map <- gvisGeoChart(Combined2012, locationvar = 'iso2c',
colorvar = 'GINI',
options = list(
colors = "['#fff7bc', '#d95f0e']"
))
GINImap <- gvisGeoChart(Combined2012, locationvar = 'iso2c',
colorvar = 'GINI',
options = list(
colors = "['#fff7bc', '#d95f0e']"
))
print(GINImap, tag = 'chart')
View(Combined2012)
View(Combined)
GINI2012 <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.PP.CD', 'EN.ATM.CO2E.PC'), extra = TRUE)
names(EPI2010)[names(EPI2010)=="iso"] <- "iso3c"
names(GINI2010)[names(GINI2010)=="SI.POV.GINI"] <- "GINI"
names(GINI2010)[names(GINI2010)=="NY.GDP.PCAP.PP.CD"] <- "GDPPerCapPPP"
names(GINI2010)[names(GINI2010)=="EN.ATM.CO2E.PC"] <- "CO2EmPerCap"
Combined2010 <- merge(GINI2010, EPI2010, by = c('iso3c'))
Combined2010 <- Combined2010[complete.cases(Combined2010),]
GINI2010 <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.PP.CD', 'EN.ATM.CO2E.PC'), extra = TRUE)
names(EPI2010)[names(EPI2010)=="iso"] <- "iso3c"
names(GINI2010)[names(GINI2010)=="SI.POV.GINI"] <- "GINI"
names(GINI2010)[names(GINI2010)=="NY.GDP.PCAP.PP.CD"] <- "GDPPerCapPPP"
names(GINI2010)[names(GINI2010)=="EN.ATM.CO2E.PC"] <- "CO2EmPerCap"
Combined2010 <- merge(GINI2010, EPI2010, by = c('iso3c'))
Combined2010 <- Combined2010[complete.cases(Combined2010),]
Combined2010$EPI.2010 <- as.numeric(as.character(Combined2010$EPI.2010))
View(Combined2010)
write.csv(Combined2010, file = "EPIGINI2010.csv")
View(Combined)
stargazer::stargazer(m3, m4, m5, type='html', covariate.labels = labels, digits = 2,
title = 'Effect of Income Inequality on EPI', font.size = 'normalsize')
